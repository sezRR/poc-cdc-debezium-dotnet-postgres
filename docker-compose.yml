version: "3.8"

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 123456
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    networks:
      - debezium-dotnet-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: admin
    networks:
      - debezium-dotnet-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  zookeeper:
    image: debezium/zookeeper
    ports:
        - "2181:2181"
        - "2888:2888"
        - "3888:3888"
  kafka:
    image: debezium/kafka
    ports:
        - "9092:9092"
        - "29092:29092"
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_EXT://localhost:29092,LISTENER_INT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_LISTENERS=LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    restart: always
    ports:
      - "8090:8090"
    environment:
      - SERVER_PORT=8090
      - KAFKA_CLUSTERS_0_NAME=localhost
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  debezium-ui:
    image: debezium/debezium-ui
    container_name: debezium-ui
    restart: always
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://connect:8083
    depends_on:
      - kafka

  connect:
    image: debezium/connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - kafka
      - zookeeper

  debezium-dotnet.api:
    restart: always
    build:
      context: .
      dockerfile: src/DebeziumDotnet.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=product_db;Username=postgres;Password=123456
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "7000:80"
    depends_on:
      - postgres
    networks:
      - debezium-dotnet-network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  debezium-dotnet-network:
    name: debezium-dotnet-network
    driver: bridge
